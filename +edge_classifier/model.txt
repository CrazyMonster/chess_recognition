>> ds = edge_classifier.training.create_dataset(1:3);

%% Load model.mat and cvpartition.mat

>> test = images(cv.test, :);
>> training = images(cv.training, :);
>> test_cmp = innerjoin(ds, test(:, {'Dataset', 'Image'}));
>> training_cmp = innerjoin(ds, training(:, {'Dataset', 'Image'}));

>> edge_classifier.training.evaluate_model(model, test_cmp);

Accuracy: 99.53%

Confusion Matrix (relative)
             P11        P00       P01    P10
           _______    ________    ___    ___

    T11    0.97368    0.026316    0      0  
    T00          0           1    0      0  
    T01          0           0    1      0  
    T10          0           0    0      1  


Confusion Matrix (absolute)
           P11    P00    P01    P10
           ___    ___    ___    ___

    T11    37      1      0      0 
    T00     0     87      0      0 
    T01     0      0     43      0 
    T10     0      0      0     43 


Dataset 1 Image 002: T1 => P1 (1 votes, 1 regions) OK
Dataset 1 Image 006: T2 => P2 (5 votes, 3 regions) OK
Dataset 1 Image 019: T2 => P2 (3 votes, 2 regions) OK
Dataset 1 Image 022: T2 => P2 (5 votes, 3 regions) OK
Dataset 1 Image 027: T2 => P2 (5 votes, 3 regions) OK
Dataset 1 Image 036: T2 => P2 (3 votes, 2 regions) OK
Dataset 1 Image 037: T1 => P1 (3 votes, 2 regions) OK
Dataset 1 Image 044: T2 => P2 (5 votes, 3 regions) OK
Dataset 2 Image 002: T1 => P1 (1 votes, 2 regions) OK
Dataset 2 Image 004: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 009: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 013: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 021: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 026: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 028: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 030: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 031: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 041: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 042: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 050: T4 => P4 (9 votes, 5 regions) OK
Dataset 2 Image 056: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 073: T1 => P1 (1 votes, 1 regions) OK
Dataset 2 Image 077: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 078: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 080: T2 => P2 (3 votes, 2 regions) OK
Dataset 2 Image 081: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 004: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 008: T3 => P3 (5 votes, 3 regions) OK
Dataset 3 Image 016: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 030: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 050: T1 => P1 (1 votes, 1 regions) OK
Dataset 3 Image 056: T2 => P2 (5 votes, 3 regions) OK
Dataset 3 Image 060: T3 => P3 (7 votes, 4 regions) OK
Dataset 3 Image 062: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 063: T2 => P2 (5 votes, 3 regions) OK
Dataset 3 Image 070: T2 => P2 (3 votes, 2 regions) OK
Dataset 3 Image 073: TNaN => PNaN (-3 votes, 2 regions) OK
Dataset 3 Image 086: T3 => P3 (5 votes, 3 regions) OK
Dataset 3 Image 087: T3 => P3 (7 votes, 4 regions) OK
